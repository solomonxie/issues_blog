[{"url":"https://api.github.com/repos/solomonxie/gitissues/issues/1","repository_url":"https://api.github.com/repos/solomonxie/gitissues","labels_url":"https://api.github.com/repos/solomonxie/gitissues/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/solomonxie/gitissues/issues/1/comments","events_url":"https://api.github.com/repos/solomonxie/gitissues/issues/1/events","html_url":"https://github.com/solomonxie/gitissues/issues/1","id":294661555,"number":1,"title":"TO-DO List","user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-06T07:47:56Z","updated_at":"2018-02-14T05:57:25Z","closed_at":null,"author_association":"OWNER","body":"- [x] 利用insomia或postman测试github api可行性\r\n- [x] python抓取某指定repo的所有issue\r\n- [x] 将指定repo下的所有issue保存到本地指定位置，并创建压缩包备份\r\n- [x] 设置config文件，把指定repo和user或存储位置等都放到config里面\r\n- [x] 测试、设计将本地的issues上建立git仓库，并与remote仓库的映射逻辑(用Bitbucket测试)\r\n- [x] 自动完成`.git/config`的配置\r\n- [x] 实现本地issues与remote的专门仓库的映射和自动push\r\n- [x] 将脚本部署在服务器和树莓派\r\n- [x] 实现定时抓取\r\n- [ ] 查找更新的issue，并只抓取更新了的\r\n- [ ] 生成运行log日志\r\n- [ ] 定期将打包的文章发送到邮箱\r\n- [ ] 在issues生成的md基础上生成博客\r\n- [ ] 下载多个repo下的所有issues，并分类存档好\r\n"}]