[{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/367909998","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/40#issuecomment-367909998","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/40","id":367909998,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-23T04:58:01Z","updated_at":"2018-05-01T16:28:17Z","author_association":"OWNER","body":"## TL;DR. Archived link: [Vector section notes of Essence Linear Algebra](https://github.com/solomonxie/solomonxie.github.io/issues/21#issuecomment-379985082)\r\n\r\n## TL;DR Archived link: [MIT OCW Linear Algebra courses list & compare](https://github.com/solomonxie/solomonxie.github.io/issues/21#issuecomment-380001327)."},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/370467603","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/40#issuecomment-370467603","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/40","id":370467603,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-03-05T16:01:47Z","updated_at":"2018-05-01T17:01:33Z","author_association":"OWNER","body":"# `What is Linear Algebra`\r\n\r\nLinear algebra, Matrix algebra, same thing.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39481781-25f6f346-4d9f-11e8-988e-0c1623e6edca.png)\r\n\r\n## Terms sheet\r\n![image](https://user-images.githubusercontent.com/14041622/39066642-51cd6ce2-4508-11e8-9863-4cc7f0497983.png)\r\n\r\n\r\n## Consistent & Inconsistant\r\n> If there IS solution or solutions to a `Linear system`, then it's consistent. Otherwise, it's Inconsistent.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39482015-084f14d0-4da0-11e8-8e0a-5cdec4232732.png)\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39482161-86ec503c-4da0-11e8-9e4e-51207852f3c4.png)\r\n\r\n"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/381383946","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/40#issuecomment-381383946","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/40","id":381383946,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-04-15T06:37:44Z","updated_at":"2018-05-02T16:27:54Z","author_association":"OWNER","body":"# MIT OCW 18.06 SC Course Notes\r\n\r\n## Unit 1.1 The geometry of linear equations\r\n\r\n[Refer to the review pdf.](https://ocw.mit.edu/courses/mathematics/18-06sc-linear-algebra-fall-2011/ax-b-and-the-four-subspaces/the-geometry-of-linear-equations/MIT18_06SCF11_Ses1.1sum.pdf)\r\n\r\nLecture video timeline | Links\r\n-- | --\r\nLecture | [0m0s](https://www.youtube.com/watch?v=ZK3O402wf1c&t=0s&index=1&list=PLE7DDD91010BC51F8)\r\nMatrix picture | [2m47s](https://youtu.be/ZK3O402wf1c?t=2m47s)\r\nRow picture | [3m41s](https://youtu.be/ZK3O402wf1c?t=3m41s)\r\nColumn picture | [8m41s](https://youtu.be/ZK3O402wf1c?t=8m41s)\r\nMatrix picture in 3D | [15m26s](https://youtu.be/ZK3O402wf1c?t=15m26s)\r\nRow picture in 3D: intersects of planes | [17m33s](https://youtu.be/ZK3O402wf1c?t=17m33s)\r\nColumn picture in 3D | [23m11s](https://youtu.be/ZK3O402wf1c?t=23m11s)\r\nPermutation Matrix | [36m42s](https://youtu.be/QVKj3LADCnA?t=36m42s)\r\n\r\n> \"The fundamental problem of linear algebra is to solve n linear equations in `n` unknowns.\"\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/38993221-93ad3a46-4415-11e8-8d2f-c3c88abac23b.png)\r\n\r\nWe view this problem in three ways:\r\n- `Row picture`: Each row is an equation, and we could draw out each line equation on the graph.\r\n- **`Column picture`**: Rewrite equations in the form below, and each column is a vector, and we could each vector (with scalar) on the graph.\r\n- `Matrix picture`: Rewrite equations into `Coefficient Matrix form`, and see the geometric meaning of a matrix and vector.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39082877-d8f0be02-458c-11e8-9da5-fdcc95edeefc.png)\r\n\r\n## Unit 1.2 Elimination with Matrices\r\n> `Elimination` is the method **EVERY** softwares use to solve `linear equations`.\r\n\r\nLecture video timeline | Links\r\n-- | -- \r\nLecture | [0m0s](https://www.youtube.com/watch?v=QVKj3LADCnA&t=0s&index=2&list=PLE7DDD91010BC51F8)\r\nElimination pivots and an example | [3m9s](https://youtu.be/QVKj3LADCnA?t=3m9s) \r\nFailure of Elimination method | [10m34s](https://youtu.be/QVKj3LADCnA?t=10m34s) \r\nAugmented matrix | [14m50s](https://youtu.be/QVKj3LADCnA?t=14m50s)\r\nOperations of matrices elimination | [19m24s](https://youtu.be/QVKj3LADCnA?t=19m24s)\r\nRow operations of Matrices Multiplication | [20m22s](https://youtu.be/QVKj3LADCnA?t=20m22s)\r\nColumn operations of Matrices multiplication | [21m43s](https://youtu.be/QVKj3LADCnA?t=21m43s)\r\nElementary Matrix | [24m46s](https://youtu.be/QVKj3LADCnA?t=24m46s)\r\nInclude all elimination steps in one Matrix | [33m29s](https://youtu.be/QVKj3LADCnA?t=33m29s)\r\n\r\n> To do `column operations`, the matrix multiplies on the right. To do `row operations`, the matrix multiplies on the left.\r\n\r\n### `Column operation` of Matrices Multiplication\r\n\r\n> Below it's a `Column Vector multiplied by a 3x3 Matrix`:\r\n![image](https://user-images.githubusercontent.com/14041622/39472961-f1dfd32c-4d7e-11e8-8c0f-2ebf560526d0.png)\r\n\r\nThe result  above is a `3x1 Matrix`, which is a `Column vector` again. Because:\r\n\r\n**THE RESULT OF THAT COLUMN OPERATION IS A LINEAR COMBINATIONS OF THE COLUMNS.**\r\n\r\n> **\"A MATRIX TIMES A COLUMN, IS A COLUMN.\"**\r\n\r\n\r\n### `Row operation` of Matrices Multiplication\r\n\r\n> Below it's a `Row Vector to multiply a 3x3 Matrix`:\r\n![image](https://user-images.githubusercontent.com/14041622/39472895-a9e5568c-4d7e-11e8-9d75-07d5224a3f42.png)\r\n\r\nThe result above is a `1x3 Matrix`, which is a `Row vector` again. Because:\r\n\r\n**THE RESULT OF THAT ROW OPERATION IS A COMBINATION OF THE ROWS.**\r\n\r\n\r\n### `Elementary Matrix`\r\n> It's also called `Elimination Matrix`.\r\n\r\n[Refer to this amazing good video by Mathispower4u: Elementary Matrices](https://www.youtube.com/watch?v=7H3JFH3IjB0&feature=youtu.be)\r\n[Refer to Mathispower4u: Write a Matrix as a Product of Elementary Matrices](https://www.youtube.com/watch?v=pMp8RfWtPwQ&feature=youtu.be)\r\n\r\nSimply saying, an `Elementary Matrix` is just an `Identity Matrix` with **ONLY ONE ELEMENT CHANGED**.\r\n\r\n`Elementary Matrix` must be **ONLY ONE ROW OPERATION** away from the `Identity Matrix`.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39473567-0bc69f66-4d82-11e8-98d9-d7ff9f49760d.png)\r\n\r\nThe example above is an `elementary matrix` which only altered the `Row-2 Column-1 entry`, and we'd like to call it the `E₂₁ matrix`, which represents `the elementary matrix which fixed the 2-1 position`.\r\n\r\nThe reason we need an `elementary matrix` is to apply each one step of `Elimination of linear equations`.\r\nWhich means that, \r\n\r\n**FOR EVERY SINGLE STEP OF ELIMINATION, WE NEED AN ELEMENTARY MATRIX.**\r\n\r\nSo for **two steps of elimination**, we could represent it with `elementary matrices` as below:\r\n![image](https://user-images.githubusercontent.com/14041622/39473976-4b9e3534-4d84-11e8-90bf-4dc88a5ef825.png)\r\n\r\nCombining **all elimination steps** in ONE MATRIX:\r\n![image](https://user-images.githubusercontent.com/14041622/39474381-4f43ebf0-4d86-11e8-8b0e-6d3788d67616.png)\r\n\r\n### `Permutation Matrix`\r\n> `Permutation Matrix` is used only to **switch positions** of elements in the matrix, without changing any numbers.\r\n\r\nExample: To **switch two ROWS of a matrix** by using a `permutation matrix` :\r\n![image](https://user-images.githubusercontent.com/14041622/39474697-cc77de32-4d87-11e8-90ba-f7cff7edd486.png)\r\n\r\nExample: To **switch two COLUMNS of a matrix** by using a `permutation matrix`:\r\n![image](https://user-images.githubusercontent.com/14041622/39474756-113f76b0-4d88-11e8-950a-719ba2619094.png)\r\n\r\n\r\n\r\n## Unit 1.3 Multiplication & Inverse Matrices\r\n\r\nLecture timeline | Links\r\n-- | --\r\nLecture | [0m0s](https://www.youtube.com/watch?v=FX4C-JpTFgY&t=136s&index=3&list=PLE7DDD91010BC51F8)"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/383020020","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/40#issuecomment-383020020","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/40","id":383020020,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-04-20T08:14:03Z","updated_at":"2018-05-02T14:16:41Z","author_association":"OWNER","body":"# `Matrices Elimination`\r\n> `Matrices elimination` (or `solving system of linear equations`) is the very first and fundamental skill throughout Linear Algebra. It's probably the first lesson of all sorts of courses.\r\n\r\n## Terminology\r\nBefore learning `solving systems of linear equations`, you really need to get familiar with all the core terminologies involved, otherwise it can be very hard to move on to next stage.\r\nAnd in this case, the best way to learn that is through Wikipedia.\r\n\r\nJFR, the core terms are: `Gaussian elimination`, `Gauss-Jordan elimination`, `Augmented Matrix`, `Elementary Row Operations`, `Elementary matrix`, `Row Echelon Form (REF)`, `Reduced Row Echelon Form (RREF)`, `Triangular Form`.\r\n\r\n### [`Gaussian elimination`](https://en.wikipedia.org/wiki/Gaussian_elimination)\r\n> It's a `Row reduction algorithm` to solve System of linear equations.\r\n\r\n[Refer to simple wiki: Gaussian elimination](https://simple.wikipedia.org/wiki/Gaussian_elimination)\r\n[Example: showme.com](http://www.showme.com/sh/?h=3fjkVEW)\r\n\r\nTo perform `Gaussian elimination`, the `coefficients of the terms in the system of linear equations` are used to create a type of matrix called an `augmented matrix`. \r\nThen, `elementary row operations` are used to **simplify** the matrix. \r\nThe **goal** of Gaussian elimination is to get the matrix in `row-echelon form`. \r\nIf a matrix is in `row-echelon form`, which is also called `Triangular Form`.\r\nSome definitions of Gaussian elimination say that the matrix result has to be in `reduced row-echelon form`. \r\n**Gaussian elimination that creates a reduced row-echelon matrix result is sometimes called `Gauss-Jordan elimination`.**\r\n\r\nTo be simpler, here is the structure:\r\n- Algorithm: `Gaussian Elimination`\r\n    - Step 1: Rewrite system to a `Augmented Matrix`.\r\n    - Step 2: Simplify matrix with `Elementary row operations`.\r\n    - Result:\r\n        - `Row Echelon Form` or\r\n        - `Reduced Echelon Form`\r\n\r\nAnd if we make the result only in `RREF`, so the name of the algorithm could also be called:\r\n- Algorithm: `Gauss-Jordan Elimination`\r\n    - Step 1: Rewrite system to a `Augmented Matrix`.\r\n    - Step 2: Simplify matrix with `Elementary row operations`.\r\n    - Result: Only in `Reduced Echelon Form`\r\n\r\n### `Elementary Row Operations`\r\nElementary row operations are used to **simplify the matrix**. \r\n\r\nThe three types of row operations used are:\r\n- Type 1: **Switching** one row with another **row**.\r\n- Type 2: **Multiplying** a row by a non-zero **number**.\r\n- Type 3: **Adding** a row from another **row**. (!Note: you can only **ADD** them but not **subtract**, but you can **ADD** a negative)\r\n\r\nConfusing operation: See where the `negative sign` was put:\r\n![image](https://user-images.githubusercontent.com/14041622/39507688-b0f759aa-4e11-11e8-89b3-69846f64a53a.png)\r\n\r\n\r\n### Example\r\nSuppose the goal is to find the solution for the linear system below:\r\n![image](https://user-images.githubusercontent.com/14041622/39080182-31be1c9a-455c-11e8-927e-773f3788b77a.png)\r\n\r\nFirst we need to turn it into `Augmented Matrix` form:\r\n![image](https://user-images.githubusercontent.com/14041622/39080192-5804ace8-455c-11e8-96ec-57c0d884a69b.png)\r\n\r\nThen we apply `Elementary Row Operations`, and result in `Row Echelon Form`:\r\n![image](https://user-images.githubusercontent.com/14041622/39080203-a26b890a-455c-11e8-9f41-50c66079b22e.png)\r\n\r\nAt the end, if we'd like, we can further on apply some row operations to get the matrix in `Reduced Row Echelon Form`:\r\n![image](https://user-images.githubusercontent.com/14041622/39080275-2846e60a-455d-11e8-83c5-53b84fd5b45a.png)\r\nReading this matrix tells us that the solutions for this system of equations occur when x = 2, y = 3, and z = -1.\r\n\r\n### `Row Echelon Form vs. Reduced Row Echelon Form`\r\n[Refer to this lecture video: REF & RREF](https://www.youtube.com/watch?v=W01H0LcVUdQ&index=10&list=PLHXZ9OQGMqxfUl0tcqPNTJsb7R6BqSLo6).\r\n\r\nIt doesn't really matter it is a `Square Matrix` or not, there could be a `Diagonal` or `Main diagonal`, or you can't draw a diagonal at all. \r\nThe only thing matters is **WHAT ARE ABOVE 1 AND WHAT ARE BELOW 1.**\r\n\r\n- REF: For each column, all numbers **below** 1 MUST BE 0. Doesn't matter what numbers are above 1.\r\n- RREF: For each column, all numbers both **above & below** 1 MUST BE 0. We don't care about it if there's no 1 in the column.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39506655-9e283416-4e0c-11e8-9e58-1df4f85c25e6.png)\r\n\r\n## `Augmented Matrix`\r\n> Means we put another column into the matrix, which represents the **Right side** of the system of equations, numbers of right of the `=` sign.\r\n\r\nWhen we apply elimination to `Linear equations`, we operate both sides at the same time. But for computer programmes, it often apply to **Left side**, and remember the operations, a.g. multiply a number or add equations together, when the left side finished then apply the same operations to the right side.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39471215-829b2d90-4d74-11e8-97b1-7ce730e92e86.png)\r\n\r\nIf a given Matrix was told it's an `Augmented Matrix`, so we have to assume that the **Last Column** is **The Solution Column**.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39482311-20236e3e-4da1-11e8-859e-6954b2d33f4a.png)\r\n\r\n## `Equivalent systems & Equivalent Matrices`\r\n\r\n- Equivalent systems: Linear systems with the SAME SOLUTION SET.\r\n![image](https://user-images.githubusercontent.com/14041622/39482863-30ad3ee0-4da3-11e8-9314-8e6c9010690e.png)\r\n- Equivalent matrices: Two matrices where One Matrix **can be turned** into the other matrix by some `elementary row operations`.\r\n![image](https://user-images.githubusercontent.com/14041622/39482947-735664c4-4da3-11e8-8d4b-fc1b233adc87.png)\r\n\r\n## `Pivot`\r\n> Or called the `Cursor`, or `Basic`, or `Basic variable`.\r\n\r\n[Refer to this video from mathispower4u.](http://youtu.be/HFbBclH99d0)\r\n\r\nIt means the value that represents the `unknown variable`  in each column. There's no `pivot` in a column if you can't get a 1 in that column.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39506959-5ef42898-4e0e-11e8-89e0-8002688d81fb.png)\r\n\r\n### `Free variables`\r\nIf there's no pivot in a column, that means this `unknown variable` of the column can be **any number**, so we call it a `free variable`.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39507131-27751b7e-4e0f-11e8-9761-cef7ee48cd64.png)\r\n\r\n### `Pivot columns`\r\n\r\nThe `pivots` are found after `Row Reduction`, and then **go back** to the Original Matrix, the columns **WITH** pivots are called `pivot columns`.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39507277-ce962f42-4e0f-11e8-8638-917697b3a341.png)\r\n\r\n### `Back Substitution`\r\nIt's simple: When you solve out one `unknown variable` in the Linear System, you put the value back to other equations. We call this process as `Back Substitution`.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39522421-b93a512a-4e44-11e8-970c-b965fdee3808.png)\r\n"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/385990238","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/40#issuecomment-385990238","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/40","id":385990238,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-05-02T14:08:29Z","updated_at":"2018-05-02T14:08:29Z","author_association":"OWNER","body":"![image](https://user-images.githubusercontent.com/14041622/39527938-55f55a72-4e55-11e8-9f4e-d5ca9a984596.png)\r\n"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/386033645","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/40#issuecomment-386033645","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/40","id":386033645,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-05-02T16:13:17Z","updated_at":"2018-05-02T16:17:45Z","author_association":"OWNER","body":"# `Matrix multiplication & Inverse Matrix`\r\n\r\n## Matrix Multiplication\r\n\r\n[Refer to this video by mathispower4u](https://www.youtube.com/watch?v=zAjUyPe-4mI&feature=youtu.be)\r\n\r\nA fairly simple way to remember how to do `matrix multiplication`:\r\nAssume that two matrices multiply together as `AB = C`.\r\n**You need to write out each entries of the product, and then place this entry with a row of A and a column of B which numbered as subscriptions of this entry.**\r\ne.g., in the `Product Matrix`, C₁₁ represents `Row-1 of A multiplies Column-1 of B`;\r\nC₂₁ represents `Row-2 of A multiplies Column-1 of B`.\r\nSo on and so forth, write down all the **entries** of the product entries, and then use `dot product` to calculate each one. \r\n\r\n![image](https://user-images.githubusercontent.com/14041622/39535582-def1e1ea-4e66-11e8-8ce8-26dfac365f3d.png)\r\n\r\n\r\n"}]