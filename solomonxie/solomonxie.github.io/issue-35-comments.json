[{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/360681894","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-360681894","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":360681894,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-01-26T04:32:44Z","updated_at":"2018-01-26T04:32:44Z","author_association":"OWNER","body":"## 很多github.io个人网站打不开\r\n排除过超多原因（VPN, hosts,ISP,DNS)后，发现只针对github.io的话，最主要的是github.io全线强制性改成了必须用https访问。所以很多repo中显示的github.io的链接前没有加`https://`就会造成打不开链接。"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/360696743","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-360696743","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":360696743,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-01-26T06:37:12Z","updated_at":"2018-01-26T06:37:12Z","author_association":"OWNER","body":"## 访问谷歌被屏蔽 （未解决）\r\n> 访问谷歌时被谷歌强制验证，通过验证后才能访问谷歌。这种一般是走代理访问时才会发现。\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/35427767-57c4db66-02a6-11e8-8263-9e7fa7522bae.png)\r\n"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/362173955","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-362173955","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":362173955,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-01T06:45:00Z","updated_at":"2018-02-01T06:45:00Z","author_association":"OWNER","body":"## ssh的`known_hosts`\r\n位置在`~/.ssh/known_hosts`"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/362991271","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-362991271","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":362991271,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-05T06:14:40Z","updated_at":"2018-02-05T06:14:40Z","author_association":"OWNER","body":"# HTTP协议 学习\r\n主要看阮一峰入门：\r\nhttp://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html\r\n\r\nhttp://www.ruanyifeng.com/blog/2012/06/internet_protocol_suite_part_ii.html\r\n\r\nhttp://www.ruanyifeng.com/blog/2016/08/http.html\r\n\r\n互联网协议，实际上不管是7层还是5层，\r\n说白了就是一个洋葱，一层一层被剥开。\r\n不管二进制码怎么样，直接用json直白一点：\r\n```javascript\r\n{ //实体层\r\n    “Head”: \"头\",\r\n    “Data: { //链接层\r\n        “Head”: “头”,\r\n\t    “Data: { //网络层\r\n\t        \"Head\": \"头\",\r\n\t        \"Data\": { // 传输层\r\n\t        \t\"Head\": \"头\", \r\n\t        \t\"Data\": { //应用层\r\n\t        \t\t\"Head\": \"头\",\r\n\t        \t\t\"Data\": \"\"\r\n\t        \t}\r\n\t        }\r\n\t    }\r\n    }\r\n}\r\n\r\n```"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/362998166","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-362998166","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":362998166,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-05T07:04:12Z","updated_at":"2018-02-05T07:04:12Z","author_association":"OWNER","body":"## Chrome无法访问某特定网页 但是Safari和其它浏览器能正常访问\r\n> 实际上这个“疑难杂症”系列的开启，就是源于今天近一个小时解决Chrome无法访问Github.io的问题。\r\n由于现在在国内，所以装了各种Shadowsocks和Chrome切换代理插件，甚至还修改了本地的Hosts文件。所以一旦遇到无法访问网页，真是要伸手到很多地方去开启、关闭、各种调试。不过最终终于在chrome的插件管理里面找到了问题。\r\n### 尝试方法\r\n**由于之前安装了`AdBlock`插件，删除它**\r\n实际上我装了以后一直没有使用这个插件，因为会被很多网站检测到并提示这个做法不道德。所以我就长期将这个插件放在不启动模式。但是没想到即便不启动，它仍然有屏蔽一些网站的功能。导致我无法访问github.io的各种个人主页。\r\n\r\n### 解决方案后记\r\n删除adblock插件后没多久就又无法访问了，所以再想别的问题。不断尝试后发现，只要把所有的url地址都强制改为`https://`安全链接，就能访问。"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/363317100","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-363317100","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":363317100,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-06T05:42:40Z","updated_at":"2018-02-06T05:42:40Z","author_association":"OWNER","body":"# 用Postman对手机抓包\r\n一般人会抓头，Postman明明是API调试工具，和抓包有什么关系。其实这也就是官方对一个小tip，本身存在是为了监控本机某端口数据包的。但其实，如果指定某一个监视端口，然后让同局域网的手机通过这台电脑的这个端口联网而已。这样的话Postman就间接监控到了手机数据包。\r\n操作没有任何难度，主要就是大家对手机将电脑视为代理连接比较陌生罢了。注意：不是让电脑开启热点充当wifi，而是手机本身已经连了wifi时设置代理为电脑而已。\r\n具体操作在[Postman官网博客中](http://blog.getpostman.com/2016/06/26/using-postman-proxy-to-capture-and-inspect-api-calls-from-ios-or-android-devices/)"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/364421814","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-364421814","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":364421814,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-09T12:33:25Z","updated_at":"2018-02-09T12:36:20Z","author_association":"OWNER","body":"# 命令行方式的网络测速 Speed Test\r\n一般最靠谱的网速测速是`Ookla Speedtest`这个网站，不管在国内还是国外。\r\n![snip20180209_69](https://user-images.githubusercontent.com/14041622/36028145-dc3de332-0dd8-11e8-9e7e-8f861ace79b9.png)\r\n\r\n不过其实它还有命令行的访问方式，这种方式最适合树莓派或者远端服务器这样的看不到显示器的网速测试。\r\n直接在命令行里一句话（是一个词就够）就能返回一系列的测试结果。\r\n官方Github网站在这里：[https://github.com/sivel/speedtest-cli](https://github.com/sivel/speedtest-cli)\r\n安装方式是：只要在自己或者服务器的命令行里输入`sudo pip install speedtest-cli`即可，下载好后，直接在命令行里输入`sppedtest-cli`，回车，就会出现测试过程和结果。\r\n![snip20180209_67](https://user-images.githubusercontent.com/14041622/36028031-832951fa-0dd8-11e8-9f15-5902bc6baab4.png)\r\n"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/364439858","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-364439858","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":364439858,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-09T13:55:32Z","updated_at":"2018-02-09T13:55:46Z","author_association":"OWNER","body":"# 让curl通过shadowsocks连接\r\nshadowsocks是Socks5的连接方式。本地打开shadowsocks的客户端后，找到它在本机使用的端口。比如1080。然后输入如下命令就可以查看到效果：\r\n```\r\ncurl --socks5-hostname localhost:1080 http://httpbin.org/ip\r\n```\r\n其中 http://httpbin.org/ip 是一个可以返回访问者ip地址的网站。\r\n如果你的命令行返回的是你的服务器ip，那么就成功。\r\n实践成功。"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/366497885","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-366497885","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":366497885,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-02-18T07:31:32Z","updated_at":"2018-02-25T18:11:33Z","author_association":"OWNER","body":"# 查看网络端口的流量\r\n> 尝试过太多了，总结：都没太大用处，顶多也就看看当前系统某网卡的进出流量。最后还是系统默认的`iftop`最靠谱。\r\n\r\n一键安装所有常用的网络监视软件：\r\n```shell\r\n# Ubuntu\r\nsudo apt-get install -y iftop dstat nload iptraf ifstat nethogs bmon slurm vnstat bwm-ng cbm speedometer \r\n\r\n#Mac \r\nbrew install iftop dstat nload iftraf ifstat nethogs bmon slurm vnstat bwm-ng cbm speedometer \r\n```\r\n\r\n###  `iftop` 统计所有端口流量 （没法统计某个端口）\r\n一般是默认安装的，\r\n需要sudo权限：`sudo iftop`。\r\n[参考文章](https://my.oschina.net/lionel45/blog/261234)\r\n![image](https://user-images.githubusercontent.com/14041622/36644777-3495a9ac-1a9a-11e8-90a3-617c295fb973.png)\r\n\r\n\r\n### `iptraf`\r\n能够看到每个网卡的当前流量，如600 kbits/sec\r\n注意，一开始的显示颜色会很难看，需要艰难地在菜单里选择color，然后重启程序，才能正常显示。\r\n![image](https://user-images.githubusercontent.com/14041622/36349500-5d6ed95c-14c3-11e8-958a-b7d9d2bd2851.png)\r\n\r\n### `bmom`\r\n动态柱状图显示进、出的流量和秒速。页面比较友好，信息简单。\r\n![image](https://user-images.githubusercontent.com/14041622/36644611-ad365e68-1a97-11e8-9197-ad01433c1d8a.png)\r\n\r\n### `vnstat`\r\n画面简单，但不是动态的。只是总结日平均、月平均等。\r\n![image](https://user-images.githubusercontent.com/14041622/36644690-1a011014-1a99-11e8-8427-f21f7a690ab6.png)\r\n\r\n### `bwm-ng`\r\n功能超少超简单，只显示进出流量。\r\n![image](https://user-images.githubusercontent.com/14041622/36644702-458c73f4-1a99-11e8-8470-93ad1c965f77.png)\r\n\r\n### `cbm`\r\n只显示进出流量。\r\n![image](https://user-images.githubusercontent.com/14041622/36644715-67f06586-1a99-11e8-9fee-22038e5a5640.png)\r\n\r\n### `speed-meter`\r\n需要输入`speedometer -r eth0 -t eth0 `执行。\r\n只显示简单信息。但是带颜色和每个峰值的标注的界面好看。\r\n![image](https://user-images.githubusercontent.com/14041622/36644729-aafca56a-1a99-11e8-9a8b-7ebe1d82dbfc.png)\r\n\r\n### `slurm`\r\n命令是`slurm -s -i eth0 `。信息很少：\r\n![image](https://user-images.githubusercontent.com/14041622/36644676-e086bd0c-1a98-11e8-921a-3325660a0299.png)\r\n\r\n### `ntop`\r\n安装还需要用户名密码，这对于服务器来说太不友善了。装完了后，还打不开。。。\r\n\r\n### `dstat`\r\n可读性不强，也没什么好玩的显示出来。\r\n![image](https://user-images.githubusercontent.com/14041622/36349470-b9267224-14c2-11e8-9c28-f08823913467.png)\r\n\r\n\r\n### `nload`\r\n画面简单，沾满全屏，只告诉你当前incoming和outgoing的流量速度。\r\n![image](https://user-images.githubusercontent.com/14041622/36349472-cf429f92-14c2-11e8-955a-e0b42df65251.png)\r\n\r\n### `ifstat`\r\n极其简单只显示两个数值：进和出的秒速。\r\n![image](https://user-images.githubusercontent.com/14041622/36349510-95a4c5ca-14c3-11e8-9b99-f4d1d24b863e.png)\r\n\r\n### `nethogs`\r\n需要sudo才有权限运行。\r\n按用户显示每个用户所用的流量，基本上没什么用，数值也少。\r\n![image](https://user-images.githubusercontent.com/14041622/36349525-f70673cc-14c3-11e8-886f-73a740be9401.png)\r\n\r\n\r\n"},{"url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/comments/370378019","html_url":"https://github.com/solomonxie/solomonxie.github.io/issues/35#issuecomment-370378019","issue_url":"https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35","id":370378019,"user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"created_at":"2018-03-05T10:36:07Z","updated_at":"2018-03-05T10:36:07Z","author_association":"OWNER","body":"# Shadowsocks命令行中的本地客户端配置\r\n> 有时候想让树莓派访问一些屏蔽的网址，所以只能用命令行的客户端。\r\n\r\n[参考文章](http://www.jeyzhang.com/how-to-install-and-setup-shadowsocks-client-in-different-os.html)\r\n\r\n简单说就是：\r\n```shell\r\nsudo apt-get install m2crypto\r\nsudo pip install shadowsocks\r\n\r\n#启动Shadowsocks\r\nsslocal -s 服务器域名或IP -p 服务器端口号 -k “密码” -l 1080 -t 600 -m rc4-md5 \r\n```\r\n\r\n当然，启动方式还有从配置文件的方法。\r\n首先在某处创建配置文件，比如`~/.shadowsocks-client.json`，内容如下：\r\n```javascript\r\n{\r\n    \"server\":\"服务器IP地址\",\r\n    \"server_port\": 服务器端口,\r\n    \"password\":\"服务器密码\",\r\n    \"local_port\": 1080,\r\n    \"timeout\": 600,\r\n    \"method\":\"aes-256-cfb\"\r\n}\r\n```\r\n然后用这个命令启动：`sslocal -c ~/.shadowsocks-client.json`\r\n\r\n## 启动之后\r\n启动之后，就不要关闭命令，只能打开另一个命令行窗口操作。\r\n现在命令行直接访问网络其实没什么变化，因为目前开启的socks5协议端口，也就是说刚刚设置的本地1080端口是socks5协议的，必须在curl里指定socks5协议，再去访问网络：\r\n```shell\r\ncurl --socks5-hostname 127.0.0.1:1080 httpbin.org/ip\r\n```\r\n不过功能强大能访问socks5协议端口的，估计也就curl了。如果使用别的命令如wget之类的，就只能访问http和https协议端口。\r\n这样的话我们就必须`把socks5端口转换为http端口`。\r\n\r\n## Shadowsocks转换HTTP代理\r\n因为考虑到很多程序都是用http端口为代理出去的，所以我们要把socks5端口映射为某个http端口。\r\n这里就需要用到另一个软件：`polipo`。\r\n[参考文章。](http://baoye.me/2016/10/17/%E5%9F%BA%E4%BA%8E%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8Shadowsocks%E7%BF%BB%E5%A2%99/)\r\n\r\n1. 输入命令安装Polipo:\r\n`sudo apt-get install polipo`\r\n\r\n2. 修改配置文件:\r\n`sudo vim /etc/polipo/config`\r\n\r\n3. 把文件内容全部替换如下：\r\n```shell\r\n# This file only needs to list configuration variables that deviate\r\n# from the default values.  See /usr/share/doc/polipo/examples/config.sample\r\n# and \"polipo -v\" for variables you can tweak and further information.\r\nlogSyslog = false\r\nlogFile = /var/log/polipo/polipo.log\r\nsocksParentProxy = \"127.0.0.1:1080\"\r\nsocksProxyType = socks5\r\nchunkHighMark = 50331648\r\nobjectHighMark = 16384\r\nserverMaxSlots = 64\r\nserverSlots = 16\r\nserverSlots1 = 32\r\nproxyAddress = \"0.0.0.0\"\r\nproxyPort = 1087\r\n```\r\n注意：上面这个`proxyPort = 1087`是要映射出来的http端口，自己随便设置。但是要记住它。\r\n\r\n4. 设置`http_proxy`环境变量\r\n`sudo vim /etc/profile`\r\n写入\r\n`export http_proxy=\"127.0.0.1:1087/\"`\r\n\r\n5. 重启Polipo: `sudo /etc/init.d/polipo restart`\r\n6. 检查效果： `curl -x 127.0.0.1:1087 httpbin.org/ip`\r\n完成！\r\n\r\n## 在Mac中命令行走代理\r\n由于Mac中使用的GUI客户端，所以很多东西都配置好了，在命令行中访问就方便很多。\r\n\r\n[参考文章。](https://github.com/mrdulin/blog/issues/18)\r\n如果是配置的Shadowsocks，那么在GUI启动了shadowsocks的情况下，需要找到正确的本地映射端口。在GUI的设置页面里面可以找到HTTP的映射端口：\r\n![image](https://user-images.githubusercontent.com/14041622/36645118-1e4b0052-1a9f-11e8-84ab-74483827d65f.png)\r\n那么，比如使用curl时，就应当用http如此访问：\r\n`curl -x http://127.0.0.1:1087 httpbin.org/ip`\r\n其它软件也同理，选择http方式的该地址和该端口，就能正确连接了！"}]